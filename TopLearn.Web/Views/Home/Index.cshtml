@model Tuple<ShowCoursesListViewModel, IEnumerable<ShowCourseItemViewModel>>
@{
    ViewData["Title"] = "خانه";
}

@section SearchBox
{
    <header>
        <a href="" class="logo"><img src="/images/logo.png"></a>
        <h1> با اساتید مجرب و کارآزموده در خودآموز تاپ لرن </h1>
        <h2> آموزش ببینید ، تجربه کسب کنید و بازار کار شوید </h2>
        <h3> با کمترین هزینه خودت یاد بگیر </h3>
    </header>
    <div class="search-form">
        <form action="/courses" method="get">
            <input type="text" id="filter" name="filter" placeholder="چی دوست داری یاد بگیری ؟">
            <button><i class="zmdi zmdi-search"></i></button>
        </form>
    </div>
}
<main id="home-page">
    <div class="container">
        <section class="terms-items">
            <header>
                <h2> آخرین دوره های تاپ لرن </h2>
                <a href="/courses"> مشاهده همه دوره ها </a>
            </header>
            <div class="row">
                <cache expires-after="@TimeSpan.FromMinutes(3)">
                    @await Component.InvokeAsync("LatestCoursesComponent");
                </cache>
            </div>
        </section>

        <hr>

        @if (Model.Item2 != null)
        {
            <section class="terms-items">
                <header>
                    <h2> دوره های محبوب تاپ لرن </h2>
                    <a href="/courses"> مشاهده همه دوره ها </a>
                </header>
                <div class="row">

                    @foreach (var course in Model.Item2)
                    {
                        <partial name="_CourseBox" model="course"></partial>
                    }

                </div>
            </section>
        }
        
    </div>
</main>

@section Scripts{
    <script>
        $(document).ready(function () {
            $("#filter").autocomplete({
                source: 'api/course/search'
            })
        });
    </script>
}